#! /bin/sh

# $Id$ #
set -e

usage()
{
    cat <<EOF
svn-add-module name [repository]
    imports the jafar module 'name' at the given SVN URL

The script adds C, C++, Swig and scripts and sets the needed svn properties. 
You have to add any other files (if any) manually
EOF
    exit 1
}

MODULE=$1
test -z "$MODULE" && usage;

if ! test -d "$MODULE"; then
    echo "ERROR: $MODULE is not a directory"
    exit 1
fi

URL=$2
if test -z "$URL"; then
    URL="svn+ssh://$USER@pollux.laas.fr/svn/jafar/jafarModules"
    cat <<EOF
WARNING: No repository URL given on command line, will use
WARNING: ${URL}
EOF
fi
URL=${URL}/${MODULE}

# Check if the module directory is already a svn checkout
# Note: svn info does not fail (i.e. returns a non-zero status code)
# if the directory exists but is not a svn working copy
url=`svn info $MODULE | grep URL | sed 's/URL: //'`

if test -n "$url"; then
    if test "$url" != "$URL"; then
        echo "$MODULE/ is already a svn working copy, but the repository URLs differ."
        echo "I'm trying to add the module in $URL while the working copy is in $url"
        exit 1
    fi
    echo "$MODULE/ is already a working copy, I will only set the files up"
else
    # Adds an empty module directory in the repository, checks it out
    # and move all files into the new directory
    # The non-svn directory is renamed to ${MODULE}_bak
    svn mkdir -m "new module $MODULE" $URL
    svn co $URL ${MODULE}_tmp
    cp -a ${MODULE}/* ${MODULE}_tmp
    mv ${MODULE} ${MODULE}_bak
    mv ${MODULE}_tmp ${MODULE}
fi

TOPDIR=$PWD/$MODULE

svn_add() {
    for file in "$@"; do
        if test -d "$file"; then
            svn add -N "$file"
        elif test -f "$file"; then
            svn add "$file"
            svn ps svn:keywords Id "$file"
        fi

        # Skip unexistant files since we are using wildcards
    done
}

cd $TOPDIR
svn_add COPYRIGHT Makefile README User.make doc include macro src test_suite

cd $TOPDIR/doc
svn_add *.doxy *.tcl *.hpp *.tpp *.cpp

cd $TOPDIR/include
svn_add $MODULE *.i

cd $TOPDIR/include/$MODULE
svn_add *.hpp *.tpp *.h *.i

cd $TOPDIR/macro
svn_add *.tcl *.rb

cd $TOPDIR/src
svn_add *.cpp *.c ruby

cd $TOPDIR/src/ruby
svn_add extconf.rb
svn propset svn:ignore 'kernel_wrap.cpp' .

cd $TOPDIR/test_suite
svn_add *.cpp *.hpp

cat <<EOF

*** 
*** Do not forget to commit these changes !
***
EOF


# $Id$ #

####################################################################
####################################################################
## Process this file with autoconf to produce a configure script. ##
## DO NOT EDIT THIS FILE !!                                       ##
##                                                                ##
## author: mcottret@laas.fr                                       ##
####################################################################
####################################################################

#  #

#########################
# Autoconf requirements #
#########################

AC_INIT(jafar,0.0,mcottret@laas.fr)
AC_CONFIG_AUX_DIR(config)
AC_PREREQ(2.59)
if test "$JAFAR_DIR" = ""; then
  AC_MSG_ERROR("variable \$JAFAR_DIR not found.You must define \$JAFAR_DIR topoint to your jafar directory.",2)
fi
AC_PREFIX_DEFAULT("$JAFAR_DIR")

#######################
# Package information #
#######################

AC_LANG(C++)
AC_CONFIG_HEADERS(include/jafarConfig.h)

######################
# Check for programs #
######################

AC_CANONICAL_BUILD
AC_CANONICAL_HOST

AC_PROG_CC
AC_PROG_CXX
AC_PROG_LN_S

## check for libtool ##
LD_TWOLEVEL_NAMESPACE="1"
AC_LIBTOOL_DLOPEN
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)
AC_PROG_INSTALL

MD_SHLIB_SUFFIX
AC_SUBST(SHLIB_SUFFIX)

## check for swig ##
SWIG_PROG
SWIG_ENABLE_CXX

#######################
# Check for libraries #
#######################

## check for tcl/tk ##
MD_CHECK_TCLTK

## check for boost ##
MD_FIND_PACKAGE(boost, boost_date_time, boost/version.hpp, [support for boost C++ library])
if test "x$with_boost" = "xyes";
then
    BOOST_CPPFLAGS="$boost_cppflags"
    BOOST_LDFLAGS="$with_boostlib"
    BOOST_DATETIME_LIBS="-lboost_date_time"
    AC_SUBST(BOOST_CPPFLAGS)
    AC_SUBST(BOOST_LDFLAGS)
    AC_SUBST(BOOST_DATETIME_LIBS)
    AC_DEFINE(HAVE_BOOST,1,[boost library])
fi

## check for openCV ##
MD_FIND_PACKAGE_OPT(opencv, cxcore, opencv/cxcore.h, [support for openCV library])
if test "x$with_opencv" = "xyes";
then
    OPENCV_CPPFLAGS="$opencv_cppflags"
    OPENCV_LDFLAGS="$with_opencvlib"
    OPENCV_LIBS="-lcxcore -lcv -lcvaux -lhighgui"
    AC_SUBST(OPENCV_CPPFLAGS)
    AC_SUBST(OPENCV_LDFLAGS)
    AC_SUBST(OPENCV_LIBS)
    AC_DEFINE(HAVE_OPENCV,1,[openCV library])
fi

## check for boost-sandbox ##
MD_FIND_PACKAGE_OPT(boost_sandbox,[], boost/numeric/bindings/lapack/lapack.h, [support for ublas lapack bindings from boost sandbox])
if test "x$with_boost_sandbox" = "xyes";
then
    BOOST_SANDBOX_CPPFLAGS="$boost_sandbox_cppflags"
    AC_SUBST(BOOST_SANDBOX_CPPFLAGS)
    AC_DEFINE(HAVE_BOOST_SANDBOX,1,[boost sandbox library])
fi

## check for lapack ##
MD_FIND_PACKAGE_OPT(lapack, lapack,[], [support for Linear Algebra Package (LAPACK)])
if test "x$with_lapack" = "xyes";
then
    LAPACK_LDFLAGS="$with_lapacklib"
    LAPACK_LIBS="-lapack"
    AC_SUBST(LAPACK_LDFLAGS)
    AC_SUBST(LAPACK_LIBS)
    AC_DEFINE(HAVE_LAPACK,1,[lapack library])
fi

## check for openGL ##

MD_FIND_PACKAGE_OPT(opengl, GL, GL/gl.h, [support for openGL])
if test "x$with_opengl" = "xyes";
then
    OPENGL_CPPFLAGS="$opengl_cppflags"
    OPENGL_LDFLAGS="$with_opengllib"
    OPENGL_LIBS="-lGL"
    AC_SUBST(OPENGL_CPPFLAGS)
    AC_SUBST(OPENGL_LDFLAGS)
    AC_SUBST(OPENGL_LIBS)
    AC_DEFINE(HAVE_OPENGL,1,[openGL library])
fi

## check for dc1394 and raw1384 ##
MD_FIND_PACKAGE_OPT(raw1394, raw1394, libraw1394/raw1394.h, [support for raw1394])
MD_FIND_PACKAGE_OPT(dc1394, dc1394_control, libdc1394/dc1394_control.h, [support for dc1394])
if test "x$with_dc1394" = "xyes" && test "x$with_raw1394" = "xyes";
then
    IEEE1394_CPPFLAGS="$raw1394_cppflags $dc1394_cppflags"
    IEEE1394_LDFLAGS="$with_raw1394lib $with_dc1394lib"
    IEEE1394_LIBS="-lraw1394 -ldc1394_control"
    AC_SUBST(IEEE1394_CPPFLAGS)
    AC_SUBST(IEEE1394_LDFLAGS)
    AC_SUBST(IEEE1394_LIBS)
    AC_DEFINE(HAVE_IEEE1394,1,[IEEE1394 support])
fi

## check for video4linux ##
MD_FIND_PACKAGE_OPT(v4l,, linux/videodev.h, [support for v4l (only available on Linux)])
if test "x$with_v4l" = "xyes";
then
    AC_DEFINE(HAVE_V4L,1,[v4l support])
fi

## check for quicktime
MD_FIND_PACKAGE_OPT(quicktime,, QuickTime/QuickTime.h, [support for QuickTime (only available on MacOSX)])
if test "x$with_quicktime" = "xyes";
then
    QUICKTIME_LDFLAGS="-Wl,-framework -Wl,Carbon -Wl,-framework -Wl,Quicktime"
    AC_SUBST(QUICKTIME_LDFLAGS) 
    AC_DEFINE(HAVE_QUICKTIME,1)
fi  

##########################
# Check for header files #
##########################

###################
# Check for types #
###################

########################
# Check for structures #
########################

######################################
# Check for compiler characteristics #
######################################


###############################
# Check for library functions #
###############################

#############################
# Check for system services #
#############################
AC_C_BIGENDIAN

################################
# extra include and extra libs #
################################
MD_EXTRA_INCLUDES
MD_EXTRA_LIBS

AC_CONFIG_FILES(Module.config)
AC_OUTPUT
echo "Now, you can run - make - in your modules ! :-)"


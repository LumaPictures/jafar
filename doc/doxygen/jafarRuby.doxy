/** \page pageJafarRuby Ruby and Jafar

\section secConfiguringRuby Configure your environnement for Ruby

\subsection subsecBuildRuby Enabling building of Ruby binding in jafar
The first step is to enable the build of Ruby modules in jafar. It is done using -DENABLE_RUBY=ON at configure time:
\code
cd $JAFAR_DIR
./cmake -DENABLE_RUBY=ON other_cool_params .
cd -
\endcode

Then you need to issue a build command in your modules.
\code
cd $JAFAR_DIR
make
cd -
\endcode

\subsection subsecEnvVariable Environnement variable
You need to define RUBYLIB for ruby to find your modules.
In bash:
\code
export RUBYLIB="$JAFAR_DIR/lib/i686-linux-gnu/ruby/1.8/"
\endcode
In tcsh:
\code
setenv RUBYLIB "$JAFAR_DIR/lib/i686-linux-gnu/ruby/1.8/"
\endcode

\section secRubyShells The Ruby shell

\subsection irb

The standard ruby shell is called 'irb', if you have followed the instructions above, you can now start to use ruby and jafar together, after starting irb, you can type the following code:
\code
require 'jafar/kernel' # load the module kernel of jafar
include Jafar # equivalent of using namespace in C++, you won't need to start all your command with Jafar::
\endcode

Note, that there is allready a <i>Kernel</i> module in the Core library of Ruby. So to access the function in the <i>Kernel</i> module of Jafar, you need to give the full path. For instance:
\code
Jafar::Kernel::DebugStream.moduleOff("gfm") # it will disable the debugging in gfm
Kernel::DebugStream.moduleOff("gfm") # will throw an error telling that DebugStream is not a member of the Kernel module
\endcode

The configuration file of the IRB is $HOME/.irbrc.

\subsection subsecJRB The jafar Ruby Shell

If you want to use the module <i>qdisplay</i>. You need to use the <i>jfrirb</i> shell.

\subsubsection subsubsecJFRIRB jfrirb
This shell requires the Qt4 ruby bindings:

On debian/ubuntu:
\code
apt-get install libqt4-ruby
\endcode

On Fedora Core:
\code
yum install QtRuby
\endcode

From source:
Download them from <a href="http://rubyforge.org/projects/korundum">rubyforge</a>.


\subsubsection subsubsecJRBRC Configuration file

The configuration file of the jrb and jfrirb shells is $HOME/.jrbrc. For instance mine looks like this:

\code
def reload()
  load 'jafar/image.rb'
  load 'jafar/qdisplay.rb'
  load 'jafar/gfm.rb'
  load 'jafar/preprocessing.rb'
  load 'jafar/geom.rb'
  load 'jafar/datareader.rb'
  load 'jafar/facetsmap.rb'
  load 'jafar/viewer3d.rb'
end

reload()

# Define the default data series for the datareader
Jafar::Datareader::DataReader.setDefaultSeriesName("2005_11_bouclage_newspec")
Jafar::Datareader::DataReader.setDefaultSerieNumber(11)
\endcode

\section secLinks Usefull links about ruby

The official ruby site is <a href="http://www.ruby-lang.org">www.ruby-lang.org</a>.

\subsection subsecDocumentation Documentation about ruby
 - <a href="http://www.ruby-lang.org/en/documentation/">the documentation page on ruby-lange.org</a>
 - <a href="http://www.ruby-lang.org/en/documentation/quickstart/">Ruby in Twenty Minutes</a>
 - <a href="http://www.ruby-doc.org/docs/ProgrammingRuby/">Online book "Programming Ruby"</a> the reference book about ruby
 - <a href="http://www.ruby-doc.org/">http://www.ruby-doc.org/</a>: a site including a few reference API documention about ruby standard library : <a href="http://www.ruby-doc.org/core/">the core library documentation</a> and <a href="http://www.ruby-doc.org/stdlib/">the standard library</a>
\subsection subsecLinksRessources Ressources
 - <a href="http://rubyforge.org">rubyforge.org</a> this site contains nearly all ruby scripts, programs or modules available
 - <a href="http://rubygems.org/">rubygems.org</a> a package management system to easily install ruby scripts, programs or modules
\subsection subsecLinksIRB About IRB
 - <a href="http://blog.nicksieger.com/articles/2006/04/23/tweaking-irb">tweaking irb</a>: completion, session saving and history

*/

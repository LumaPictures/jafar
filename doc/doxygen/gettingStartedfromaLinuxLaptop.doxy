/* $Id: gettingStartedLaas.doxy 277 2004-10-06 16:25:21Z sbosch $ */

/** \page pageGettingStartedfromaLinuxLaptop An extensive guideline to start with Jafar on a Linux laptop

\b Warning: This page is partially broken.

The main difficulty in using Jafar on a Linux laptop is that you need some external librairies probably not already installed on your system. We are going to cope with this. The install procedure is very simple and can be resume in these few steps :

  - check which librairies you need
  - install or update the librairies
  - install Jafar

We provide an extensive guideline because we assume unix system may be unfamiliar to you. If it don't, a very quick reading will be probably sufficient.

\section secExtlib External Libraries

To use Jafar you need of these external librairies:

  - <a href=http://www.boost.org/>Boost</a> 1.31.0
  - <a href=http://www.intel.com/research/mrl/research/opencv/>OpenCV</a> 0.9.6
  - <a href=http://www.swig.org/>swig</a> 1.3.22
  - <a href=http://subversion.tigris.org>subversion</a> 1.1.0

Unfortunately, there is not yet any .rpm provided for them. So you have to compile them by yourself. Don't worry, it is quite easy and here is a extensive guideline to achieve this. 

Few notations :

   - ####  represent the version number of each librairies
   - \c ~/libsjafar \c is the repository on you laptop where you put the librairies source archives. I suggest you to use this name, it will make you easier to copy/paste the following commands.





\section secCheckLibs Checking for librairies already installed

You need to look for any previously intalled version of these librairies on your system. We described a quite generic method based on Fedora (Red Hat) hierarchy of the system. If you don't have one you will have to look for previous versions in other location that ones described... If you don't understand this ask for someone !

\subsection subsecBoost Boost

Type :
\verbatim yourLaptop[~] > ls /usr/lib/libboost_date_time.so.*
/usr/lib/libboost_date_time.so.1@ /usr/lib/libboost_date_time.so.1.31.0*
\endverbatim

In this case, you have the 1.31.0 version of Boost librairy. Check if this version is the same one than the recommended one the top of this document. If it is, you don't have to install Boost. <em> So skip every step dealing with Boost in this procedure. </em>  
Otherwise, if you have an older version <em>install Boost using no --prefix option. </em>If you don't have Boost at all just follow exactly the procedure dealing with Boost.


\subsection subsecOpenCV OpenCV

Type:
\verbatim yourLaptop[~] > ls /usr/lib/libcv.so.*
/usr/local/opencv/lib/libcv.so.0@  /usr/local/opencv/lib/libcv.so.0.9.6*
\endverbatim

In this case, you have the 0.9.6 version of OpenCV librairy. Check if this version is the same one than the recommended one the top of this procedure. If it is, you don't have to install OpenCV. <em>So skip every step dealing with OpenCV in this procedure. </em>
Otherwise, if you have an older version <em> install OpenCV using no --prefix option. </em>If you don't have OpenCV at all just follow exactly the procedure dealing with OpenCV.


\subsection subsecSwig swig

Type:
\verbatim yourLaptop[~] > swig -version
SWIG Version 1.3.22
\endverbatim

In this case, you have the 1.3.22 version of swig librairy. Check if this version is the same one than the recommended one the top of this procedure. If it is, you don't have to install swig. <em>So skip every step dealing with swig in this procedure. </em>
Otherwise, if you have an older version type :

\verbatim yourLaptop[~] > which swig
A_PATH/bin/swig
\endverbatim

<em>You have to install swig in the directory A_PATH. So you will have to do a </em>\c configure --\c prefix=A_PATH  

If you don't have swig at all just follow exactly the procedure dealing with swig.


\subsection subsecSubversion subversion

Type:
\verbatim yourLaptop[~] > svn --version
svn, version 1.1.0 (r11180)
\endverbatim

In this case, you have the 1.1.0 version of subversion librairy. Check if this version is the same one than the recommended one the top of this procedure. If it is, you don't have to install subversion. <em>So skip every step dealing with subversion in this procedure.</em>
Otherwise, if you have an older version type :

\verbatim yourLaptop[~] > where subversion
A_PATH/bin/svn
\endverbatim

<em>You have to install subversion in the directory A_PATH. So you will have to do a </em>\c configure \c --prefix=A_PATH

If you don't have subversion at all just follow exactly the procedure dealing with subversion.



\section secGetSources Getting the needed sources

Now, getting the sources you need. You may copy the archived sources from the directory /home/sbosch/libsjafar/ on file server pollux to you laptop with this command :  
\verbatim 
yourLaptop[~] > ssh pollux 
yourLaptop[~] > scp -r /home/sbosch/libsjafar yourName@yourLaptop:.
\endverbatim

You may also download them from their respective website:

   - Boost
http://sourceforge.net/project/showfiles.php?group_id=7586
download the newest \e boost####.\e tar.gz in boost package and the newest \e boost-jam####.\e tar.gz in boost-jam package

   - OpenCV :
http://sourceforge.net/project/showfiles.php?group_id=22870
download the newest \e opencv####.\e tar.gz in opencv-linux package
 
   - swig
http://sourceforge.net/project/showfiles.php?group_id=1645
download the newest \e swig####.\e tar.gz in swig package

   - subversion
http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=260
download the newest \e subversion####.\e tar.gz


Reaches the directory where you stored the archived sources and uncompress all of them :
\verbatim yourLaptop[~] > cd ~/libsjafar/
 yourLaptop[~] > tar -zxvf boost####.tar.gz
 yourLaptop[~] > tar -zxvf boost-jam####.tar.gz
 yourLaptop[~] > tar -zxvf opencv####.tar.gz
 yourLaptop[~] > tar -zxvf swig####.tar.gz
 yourLaptop[~] > tar -zxvf subversion####.tar.gz
\endverbatim


You may supress all archives :
\verbatim yourLaptop[libjafar] > rm ~/libsjafar/*.gz
\endverbatim





\section secLibInstall Librairies compilation/install

Now you can create the directories where these librairies will be installed <strong>when these directories doesn't exist</strong>. For swig and subversion if you have to install them in <em>A_PATH </em>replace <em>/usr/local/ </em>by <em>A_PATH.</em>
\verbatim yourLaptop[libjafar] > sudo mkdir /usr/local/boost-####
 yourLaptop[libjafar] > sudo mkdir /usr/local/opencv-####
 yourLaptop[libjafar] > sudo mkdir /usr/local/swig-####
 yourLaptop[libjafar] > sudo mkdir /usr/local/subversion-####
\endverbatim

And creates symbolic links to be able to link with jafar :
\verbatim yourLaptop[libjafar] > sudo ln -s /usr/local/boost#### /usr/local/boost
 yourLaptop[libjafar] > sudo ln -s /usr/local/ opencv#### /usr/local/opencv
 yourLaptop[libjafar] > sudo ln -s /usr/local/swig#### /usr/local/swig
 yourLaptop[libjafar] > sudo ln -s /usr/local/subversion#### /usr/local/subversion
\endverbatim

\subsection subsecBoost  How to install boost

First you need to compile boost-jam, a Boost version of makefile system :

\verbatim yourLaptop[~] > cd ~/libsjafar/boost-jam####/
 yourLaptop[boost-jam####] > ./build.sh
 yourLaptop[boost-jam####] > sudo mv bin.linuxx86/bjam /usr/local/bin
 yourLaptop[boost-jam####] > source ~/.login
\endverbatim

The two previous commands are needed to put bjam in your PATH.
Now, compile Boost :

\verbatim yourLaptop[~] > cd ~/libsjafar/boost####/
 yourLaptop[boost####] > bjam --prefix=/usr/local/boost-#### "-sTOOLS=gcc" install
\endverbatim

That's done for Boost ! The following ones are much easier.


\subsection subsecOpenCV  How to install OpenCV

Reaches the OpenCV source repository and run the configure :

\verbatim yourLaptop[~] > cd ~/libsjafar/opencv####/
 yourLaptop[opencv####] > ./configure --prefix=/usr/local/opencv-####/
\endverbatim

Then compile it and run the install :

\verbatim yourLaptop[opencv####] > make
 yourLaptop[opencv####] > sudo make install
\endverbatim

That's done too. The same procedure is shared for the last two librairies.


\subsection subsecSwig How to install swig

Reaches the swig source repository and run the configure :

\verbatim yourLaptop[~] > cd ~/libsjafar/swig####/
 yourLaptop[swig####] > ./configure --prefix=/usr/local/swig-####/
\endverbatim

Then compile it and run the install :

\verbatim yourLaptop[swig####] > make
 yourLaptop[swig####] > sudo make install
\endverbatim


\subsection subsecSubversion  How to install subversion

Reaches the subversion source repository and run the configure :

\verbatim yourLaptop[~] > cd ~/subversion####/
 yourLaptop[subversion####] > ./configure --prefix=/usr/local/subversion-####/
\endverbatim

Then compile it and run the install :

\verbatim yourLaptop[subversion####] > make
 yourLaptop[subversion####] > sudo make install
\endverbatim


\subsection subsecEditLogin  Final Step : edit your .login

Open you .login :

\verbatim yourLaptop[~] > xemacs/vim/gedit/ATextEditor ~/.login
\endverbatim

And add these lines :

\verbatim 	#
	# Boost
	#
        setenv TMP_PATH ${TMP_PATH}:"/usr/local/boost/"
#        setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:"/usr/local/boost/lib/"
	
	#
	# OpenCV
	#
        setenv TMP_PATH ${TMP_PATH}:"/usr/local/opencv/"
#        setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:"/usr/local/opencv/lib"

	#
	# Swig
	#
#        setenv TMP_PATH ${TMP_PATH}:"/usr/local/swig/"
        setenv TMP_PATH "/usr/local/swig/bin":${TMP_PATH}

	#
	# Subversion
	#
#        setenv TMP_PATH ${TMP_PATH}:"/usr/local/subversion/"
        setenv TMP_PATH "/usr/local/subversion/bin":${TMP_PATH}

	#
	# Jafar
	#
        setenv JAFAR_DIR "/home/sbosch/jafar"
\endverbatim

Source it :
\verbatim yourLaptop[~] > source ~/.login
\endverbatim
You have done with the librairies.




\section secInstallJafar Installing Jafar

Go in your home directory and checkout jafar:
\verbatim yourLaptop[~] > svn co svn+ssh://yourName@pollux.laas.fr/home/tlemaire/svnroot_jafar/trunk jafar
\endverbatim

Go in kernel module and edit User.make :

\verbatim yourLaptop[~] > cd ~/jafar/modules/kernel/
 yourLaptop[kernel] > xemacs User.make&
\endverbatim

You need to set :
\verbatim # configure option
CONF_OPT = --with-boost\
	   --with-opencv
\endverbatim

Then type \c make. It will automatically run a \c configure, then a \c make. If you don't see any warning about OpenCV or Boost your jafar is ready to be used.




*/

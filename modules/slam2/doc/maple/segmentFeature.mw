<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Error"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[255,0,255]" name="Error" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Lucida Bright" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">with(LinearAlgebra):with(CodeGeneration, C):with(VectorCalculus,Jacobian):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservationInImageFrame := proc (l::Vector(3))::Vector(2);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">local rho, theta;
rho := -1.0*l[3]/sqrt(l[1]*l[1]+l[2]*l[2]);
theta := arctan(l[2],l[1]);
Vector([rho,theta]);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+ST9wcmVkaWN0T2JzZXJ2YXRpb25JbkltYWdlRnJhbWVHNiJmKzYjJ0kibEdGJS1JJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0YtSShfc3lzbGliR0YlNiMiIiQ2JEkkcmhvR0YlSSZ0aGV0YUdGJUYlRiVDJT44JCwkKigkIiM1ISIiIiIiJjkkRi9GPC1JJXNxcnRHRiU2IywmKiYmRj42I0Y8RjxGREY8RjwqJiZGPjYjIiIjRjxGR0Y8RjxGO0Y7PjglLUknYXJjdGFuR0YlNiRGR0ZELUYrNiM3JEY2RktGJUYlRiUtRitGSA==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservationInImageFrame(&lt;a,b,c&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqMyYqemciLUknTUFUUklYR0YlNiM3JDcjLCQqJkkiY0dGJSIiIiwmKiRJImFHRiUiIiNGMCokSSJiR0YlRjRGMCMhIiJGNCQhIzVGODcjLUknYXJjdGFuRzYkSSpwcm90ZWN0ZWRHRj9JKF9zeXNsaWJHRiU2JEY2RjMmSSdWZWN0b3JHRj42I0knY29sdW1uR0Yl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(predictObservationInImageFrame(&lt;a,b,c&gt;), deducetypes=false, optimize);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = a * a;
t2 = b * b;
t4 = sqrt(t1 + t2);
t8 = atan2(b, a);
cg[0] = -0.10e1 * c / t4;
cg[1] = t8;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservationInImageFrame_jac := Jacobian(predictObservationInImageFrame(&lt;a,b,c&gt;), [a,b,c]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SUNwcmVkaWN0T2JzZXJ2YXRpb25JbkltYWdlRnJhbWVfamFjRzYiLUknUlRBQkxFR0YlNiUiKl85R2ciLUknTUFUUklYR0YlNiM3JDclLCQqKEkiY0dGJSIiIiwmKiRJImFHRiUiIiNGMiokSSJiR0YlRjZGMiMhIiRGNkY1RjIkIiM1ISIiLCQqKEYxRjJGM0Y5RjhGMkY7LCQqJEYzI0Y9RjYkISM1Rj03JSwkKihGOEYyRjUhIiMsJkYyRjIqJkY4RjZGNUZIRjJGPUY9KiZGNUY9RklGPSIiIUknTWF0cml4RzYkSSpwcm90ZWN0ZWRHRk9JKF9zeXNsaWJHRiU=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(predictObservationInImageFrame_jac, deducetypes=false, optimize);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = a * a;
t2 = b * b;
t3 = t1 + t2;
t4 = sqrt(t3);
t7 = c / t4 / t3;
t14 = 0.1e1 / t1;
t18 = 0.1e1 / (0.1e1 + t2 * t14);
cg0[0][0] = 0.10e1 * t7 * a;
cg0[0][1] = 0.10e1 * t7 * b;
cg0[0][2] = -0.10e1 / t4;
cg0[1][0] = -b * t14 * t18;
cg0[1][1] = 0.1e1 / a * t18;
cg0[1][2] = 0.0e0;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">CrossProduct(&lt;x1, y1, z1&gt;,&lt;x2,y2,z2&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqO28lKWYiLUknTUFUUklYR0YlNiM3JTcjLCYqJkkjeTFHRiUiIiJJI3oyR0YlRjBGMComSSN6MUdGJUYwSSN5MkdGJUYwISIiNyMsJiomRjNGMEkjeDJHRiVGMEYwKiZJI3gxR0YlRjBGMUYwRjU3IywmKiZGO0YwRjRGMEYwKiZGL0YwRjlGMEY1JkknVmVjdG9yRzYkSSpwcm90ZWN0ZWRHRkNJKF9zeXNsaWJHRiU2I0knY29sdW1uR0Yl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">CrossProduct(&lt;-0.428649,-0.501853,0.751268&gt;,&lt;-31.6924,-20.7493,-31.9433&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqQzxOZiItSSdNQVRSSVhHRiU2IzclNyMkIisvRSI+OyQhIik3IyQhK2NcPl1QRi83IyQhK0MkZjIsKCEiKiZJJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0Y6SShfc3lzbGliR0YlNiNJJ2NvbHVtbkdGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(CrossProduct(&lt;x1, y1, z1&gt;,&lt;x2,y2,z2&gt;));</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">cg1[0] = y1 * z2 - z1 * y2;
cg1[1] = z1 * x2 - x1 * z2;
cg1[2] = x1 * y2 - y1 * x2;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">CrossProductJac := Jacobian(CrossProduct(&lt;x1, y1, z1&gt;,&lt;x2,y2,z2&gt;), [x1,y1,z1,x2,y2,z2]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STBDcm9zc1Byb2R1Y3RKYWNHNiItSSdSVEFCTEVHRiU2JSIqZ2UrZyItSSdNQVRSSVhHRiU2IzclNygiIiFJI3oyR0YlLCRJI3kyR0YlISIiRi8sJEkjejFHRiVGM0kjeTFHRiU3KCwkRjBGM0YvSSN4MkdGJUY1Ri8sJEkjeDFHRiVGMzcoRjIsJEY5RjNGLywkRjZGM0Y7Ri9JJ01hdHJpeEc2JEkqcHJvdGVjdGVkR0ZBSShfc3lzbGliR0Yl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">line2dRhoThetaToAbc:= proc (l::Vector(2))::Vector(3);
local a,b,c;
a:=cos(l[2]);
b:=sin(l[2]);
c:=-l[1];
Vector(&lt;a,b,c&gt;);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STRsaW5lMmRSaG9UaGV0YVRvQWJjRzYiZis2IydJImxHRiUtSSdWZWN0b3JHNiRJKnByb3RlY3RlZEdGLUkoX3N5c2xpYkdGJTYjIiIjNiVJImFHRiVJImJHRiVJImNHRiVGJUYlQyY+OCQtSSRjb3NHRiw2IyY5JEYvPjglLUkkc2luR0YsRjo+OCYsJCZGPDYjIiIiISIiLUYrNiMtSSQ8LD5HRi42JUY3Rj5GQkYlRiVGJS1GKzYjIiIk</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">line2dRhoThetaToAbc(&lt;rho,theta&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqY05jaCItSSdNQVRSSVhHRiU2IzclNyMtSSRjb3NHNiRJKnByb3RlY3RlZEdGMEkoX3N5c2xpYkdGJTYjSSZ0aGV0YUdGJTcjLUkkc2luR0YvRjI3IywkSSRyaG9HRiUhIiImSSdWZWN0b3JHRi82I0knY29sdW1uR0Yl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">line2dRhoThetaToAbcJac := Jacobian(line2dRhoThetaToAbc(&lt;rho,theta&gt;),[rho,theta]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STdsaW5lMmRSaG9UaGV0YVRvQWJjSmFjRzYiLUknUlRBQkxFR0YlNiUiKltIMWYiLUknTUFUUklYR0YlNiM3JTckIiIhLCQtSSRzaW5HNiRJKnByb3RlY3RlZEdGNEkoX3N5c2xpYkdGJTYjSSZ0aGV0YUdGJSEiIjckRi8tSSRjb3NHRjNGNjckRjhGL0knTWF0cml4R0Yz</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">computePl := proc(u0, v0, alphaU, alphaV)::Matrix(3,3);
Matrix([[alphaV, 0, 0] , [0, alphaU, 0] , [-alphaV*u0, -alphaU*v0, alphaU*alphaV] ]);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSpjb21wdXRlUGxHNiJmKzYmSSN1MEdGJUkjdjBHRiVJJ2FscGhhVUdGJUknYWxwaGFWR0YlRiVGJUYlLUknTWF0cml4RzYkSSpwcm90ZWN0ZWRHRi9JKF9zeXNsaWJHRiU2IzclNyU5JyIiIUY1NyVGNTkmRjU3JSwkKiZGNCIiIjkkRjshIiIsJComRjdGOzklRjtGPSomRjdGO0Y0RjtGJUYlRiUtRi02JCIiJEZE</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MatrixInverse(computePl(u0, v0, alphaU, alphaV));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqSyU9J2YiLUknTUFUUklYR0YlNiM3JTclKiRJJ2FscGhhVkdGJSEiIiIiIUYwNyVGMCokSSdhbHBoYVVHRiVGL0YwNyUqKEYzRi9GLkYvSSN1MEdGJSIiIiooRi5GL0YzRi9JI3YwR0YlRjcqJkYzRi9GLkYvSSdNYXRyaXhHNiRJKnByb3RlY3RlZEdGPUkoX3N5c2xpYkdGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">rotationVectorToRotationMatrix := proc(v::Vector(3))::Matrix(3,3);
local theta, x, y, z, c, s, t;
theta := VectorNorm(v,Euclidean,conjugate=false);
x := v[1]/theta;
y := v[2]/theta;
z := v[3]/theta;
c := cos(theta);
s := sin(theta);
t := 1-c;
Matrix([ [t*x*x + c, t*x*y + z*s, t*x*z - y*s], [t*x*y - z*s, t*y*y + c, t*y*z + x*s], [t*x*z + y*s, t*y*z - x*s, t*z*z + c] ]);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+ST9yb3RhdGlvblZlY3RvclRvUm90YXRpb25NYXRyaXhHNiJmKzYjJ0kidkdGJS1JJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0YtSShfc3lzbGliR0YlNiMiIiQ2KUkmdGhldGFHRiVJInhHRiVJInlHRiVJInpHRiVJImNHRiVJInNHRiVJInRHRiVGJUYlQyo+OCQtX0kuTGluZWFyQWxnZWJyYUdGLEkrVmVjdG9yTm9ybUdGJTYlOSRJKkV1Y2xpZGVhbkdGJS9JKmNvbmp1Z2F0ZUdGLUkmZmFsc2VHRi0+OCUqJiZGQTYjIiIiRktGOyEiIj44JiomJkZBNiMiIiNGS0Y7Rkw+OCcqJiZGQUYvRktGO0ZMPjgoLUkkY29zR0YsNiNGOz44KS1JJHNpbkdGLEZlbj44KiwmRktGS0ZYRkwtSSdNYXRyaXhHRiw2IzclNyUsJiooRltvRktGR0ZLRkdGS0ZLRlhGSywmKihGW29GS0ZHRktGTkZLRksqJkZURktGZ25GS0ZLLCYqKEZbb0ZLRkdGS0ZURktGSyomRk5GS0ZnbkZLRkw3JSwmRmVvRktGZm9GTCwmKihGW29GS0ZORktGTkZLRktGWEZLLCYqKEZbb0ZLRk5GS0ZURktGSyomRkdGS0ZnbkZLRks3JSwmRmhvRktGaW9GSywmRl9wRktGYHBGTCwmKihGW29GS0ZURktGVEZLRktGWEZLRiVGJUYlLUZebzYkRjBGMA==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MatrixVectorMultiply(rotationVectorToRotationMatrix(&lt;0.1,0,0&gt;),&lt;0,1,0&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqJ0hPJGYiLUknTUFUUklYR0YlNiM3JTcjJCIiIUYuNyMkIjNAKysrYDsvXSoqISM9NyMkITNrKysrbDtNJCkqKiEjPiZJJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0Y6SShfc3lzbGliR0YlNiNJJ2NvbHVtbkdGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">pluckerLineInit := proc (z::Vector(2), d, phi,sg, u0, v0, alphaU, alphaV)::Vector(6);
local rho, theta, Pl::Matrix(3,3), n::Vector(3), l::Vector(3), lp::Vector(3), u::Vector(3), h, refPoint::Vector(2), g::Vector(3);
rho := z[1];
theta := z[2];
Pl := computePl(u0,v0,alphaU,alphaV);
l := &lt;cos(theta), sin(theta), -rho&gt;;
lp := MatrixVectorMultiply(MatrixInverse(Pl), l);
n := Normalize(lp,Euclidean,conjugate=false);
refPoint := &lt;rho*cos(theta), rho*sin(theta)&gt; + VectorScalarMultiply(&lt;-sin(theta), cos(theta)&gt;, sg);
g:= &lt;(refPoint[1]-u0)/alphaU, (refPoint[2]-v0)/alphaV, 1.0&gt;;
Normalize(g,Euclidean,inplace=true,conjugate=false);
h := d*sin(phi);
u := MatrixVectorMultiply( rotationVectorToRotationMatrix(VectorScalarMultiply(n,-phi)),g);
Vector( [VectorScalarMultiply(n, h), u]);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STBwbHVja2VyTGluZUluaXRHNiJmKzYqJ0kiekdGJS1JJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0YtSShfc3lzbGliR0YlNiMiIiNJImRHRiVJJHBoaUdGJUkjc2dHRiVJI3UwR0YlSSN2MEdGJUknYWxwaGFVR0YlSSdhbHBoYVZHRiU2LEkkcmhvR0YlSSZ0aGV0YUdGJSdJI1BsR0YlLUknTWF0cml4R0YsNiQiIiRGQCdJIm5HRiUtRis2I0ZAJ0kibEdGJUZDJ0kjbHBHRiVGQydJInVHRiVGQ0kiaEdGJSdJKXJlZlBvaW50R0YlRionSSJnR0YlRkNGJUYlQy4+OCQmOSQ2IyIiIj44JSZGVEYvPjgmLUkqY29tcHV0ZVBsR0YlNiY5KDkpOSo5Kz44KC1JJDwsPkdGLjYlLUkkY29zR0YsNiNGWC1JJHNpbkdGLEZkbywkRlIhIiI+OCktX0kuTGluZWFyQWxnZWJyYUdGLEk1TWF0cml4VmVjdG9yTXVsdGlwbHlHRiU2JC1fRl1wSS5NYXRyaXhJbnZlcnNlR0YlNiNGZW5GXm8+OCctX0ZdcEkqTm9ybWFsaXplR0YlNiVGam9JKkV1Y2xpZGVhbkdGJS9JKmNvbmp1Z2F0ZUdGLUkmZmFsc2VHRi0+OCwsJi1GYG82JComRlJGVkZib0ZWKiZGUkZWRmVvRlZGVi1fRl1wSTVWZWN0b3JTY2FsYXJNdWx0aXBseUdGJTYkLUZgbzYkLCRGZW9GaG9GYm85J0ZWPjgtLUZgbzYlKiYsJiZGX3FGVUZWRmluRmhvRlZGW29GaG8qJiwmJkZfcUYvRlZGam5GaG9GVkZcb0ZobyQiIzVGaG8tRmdwNiZGXnJGanAvSShpbnBsYWNlR0YlSSV0cnVlR0YtRltxPjgrKiY5JUZWLUZmbzYjOSZGVj44Ki1GXHA2JC1JP3JvdGF0aW9uVmVjdG9yVG9Sb3RhdGlvbk1hdHJpeEdGJTYjLUZmcTYkRmVwLCRGZHNGaG9GXnItRis2IzckLUZmcTYkRmVwRl9zRmZzRiVGJUYlLUYrNiMiIic=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">u0:=256;v0:=256;alphaU:=300;alphaV:=300;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSN1MEc2IiIkYyM=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSN2MEc2IiIkYyM=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSdhbHBoYVVHNiIiJCsk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSdhbHBoYVZHNiIiJCsk</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">pluckerLineInit(&lt;446.91,1.57082&gt;,2.66667,0.349066,1.41856,256,256,300,300);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqd1koPTstSSdNQVRSSVhHRiU2IzcoNyMkITNWV19sdUpiQD0hI0E3IyQiMzd5bFtkeGQlcCghIz03IyQhM0tHQWVUI0duKltGMzcjJCEzISkpRzYkMysqKlJGRjM3IyQiMz5HSF9SMFFqXkYzNyMkIjNzTGtGRiUqbzgiKUYzJkknVmVjdG9yRzYkSSpwcm90ZWN0ZWRHRkNJKF9zeXNsaWJHRiU2I0knY29sdW1uR0Yl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Normalize(MatrixVectorMultiply(Plinv,&lt;cos(theta),sin(theta),-rho&gt;),Euclidean,conjugate=false);;</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, (in LinearAlgebra:-MatrixVectorMultiply) invalid input: `LinearAlgebra:-MatrixVectorMultiply` expects its 1st argument, A, to be of type Matrix but received Plinv</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(pluckerLineInit(&lt;rho,theta&gt;, d, phi, sg, u0, v0, alphaU, alphaV), optimize, output="pluckerLineInit.c");</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">pluckerLineInitJac := Jacobian(pluckerLineInit(&lt;rho,theta&gt;, d, phi, sg, u0, v0, alphaU, alphaV),[rho,theta,d,phi]):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(pluckerLineInitJac,optimize,output="pluckerLineInitJac.c");</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#
# extremities
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">computeExt := proc (pluckerLine::Vector(6), s)::Vector(3);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">local n::Vector(3), u::Vector(3);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">n := pluckerLine[1..3];
u := pluckerLine[4..6];
CrossProduct(u,n) + VectorScalarMultiply(u,s);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SStjb21wdXRlRXh0RzYiZis2JCdJLHBsdWNrZXJMaW5lR0YlLUknVmVjdG9yRzYkSSpwcm90ZWN0ZWRHRi1JKF9zeXNsaWJHRiU2IyIiJ0kic0dGJTYkJ0kibkdGJS1GKzYjIiIkJ0kidUdGJUY1RiVGJUMlPjgkJjkkNiM7IiIiRjc+OCUmRj42IzsiIiVGMCwmLV9JLkxpbmVhckFsZ2VicmFHRixJLUNyb3NzUHJvZHVjdEdGJTYkRkNGPEZBLV9GS0k1VmVjdG9yU2NhbGFyTXVsdGlwbHlHRiU2JEZDOSVGQUYlRiVGJUY1</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(computeExt(&lt;n0,n1,n2,u0,u1,u2&gt;,s),optimize);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">cg4[0] = u1 * n2 - u2 * n1 + 256 * s;
cg4[1] = u2 * n0 - 256 * n2 + s * u1;
cg4[2] = 256 * n1 - u1 * n0 + s * u2;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">computeExtJac := Jacobian(computeExt(&lt;n0,n1,n2,u0,u1,u2&gt;,s),[n0,n1,n2,u0,u1,u2]);</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, invalid input: `VectorCalculus:-Jacobian` expects its 2nd argument, v, to be of type list(name), but received [n0, n1, n2, 256, u1, u2]</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(computeExtJac,optimize);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = computeExtJac;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">extToLine := proc(ext1::Vector(2), ext2::Vector(2))::Vector(2);
local orig::Vector(2), u::Vector(2), sO, ptO::Vector(2);
orig := &lt;0,0&gt;;
u:= Normalize(ext2-ext1,Euclidean,conjugate=false);
sO := DotProduct(orig-ext1,u,conjugate=false);
ptO := ext1 + VectorScalarMultiply(u,sO);
&lt;Norm(ptO-orig, Euclidean, conjugate=false),  arctan(ptO[2],ptO[1])&gt;;</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSpleHRUb0xpbmVHNiJmKzYkJ0klZXh0MUdGJS1JJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0YtSShfc3lzbGliR0YlNiMiIiMnSSVleHQyR0YlRio2JidJJW9yaWdHRiVGKidJInVHRiVGKkkjc09HRiUnSSRwdE9HRiVGKkYlRiVDJz44JC1JJDwsPkdGLjYkIiIhRkE+OCUtX0kuTGluZWFyQWxnZWJyYUdGLEkqTm9ybWFsaXplR0YlNiUsJjklIiIiOSQhIiJJKkV1Y2xpZGVhbkdGJS9JKmNvbmp1Z2F0ZUdGLUkmZmFsc2VHRi0+OCYtX0ZGSStEb3RQcm9kdWN0R0YlNiUsJkY9RktGTEZNRkNGTz44JywmRkxGSy1fRkZJNVZlY3RvclNjYWxhck11bHRpcGx5R0YlNiRGQ0ZTRkstRj82JC1fRkZJJU5vcm1HRiw2JSwmRlpGS0Y9Rk1GTkZPLUknYXJjdGFuR0YsNiQmRlpGLyZGWjYjRktGJUYlRiVGKg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">extToLine(&lt;1,1&gt;,&lt;-1,1&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqP2libCItSSdNQVRSSVhHRiU2IzckNyMiIiI3IywkSSNQaUdJKnByb3RlY3RlZEdGMSNGLSIiIyZJJ1ZlY3Rvckc2JEYxSShfc3lzbGliR0YlNiNJJ2NvbHVtbkdGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(extToLine(&lt;u1,v1&gt;,&lt;u2,v2&gt;), optimize, deducetypes=false);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = u2 * u2;
t4 = u1 * u1;
t5 = v2 * v2;
t8 = v1 * v1;
t10 = sqrt(t1 - 0.2e1 * u2 * u1 + t4 + t5 - 0.2e1 * v2 * v1 + t8);
t11 = 0.1e1 / t10;
t13 = u2 - u1;
t16 = v2 - v1;
t19 = (-u1 * t11 * t13 - v1 * t11 * t16) * t11;
t21 = u1 + t19 * t13;
t22 = t21 * t21;
t24 = v1 + t19 * t16;
t25 = t24 * t24;
t27 = sqrt(t22 + t25);
t28 = atan2(t24, t21);
cg5[0] = t27;
cg5[1] = t28;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">extToLineJac := simplify(Jacobian(extToLine(&lt;u1,v1&gt;,&lt;u2,v2&gt;),[u1,v1,u2,v2])):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(extToLineJac, optimize, deducetypes=false);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = u2 * u2;
t2 = t1 * u2;
t5 = v1 * v1;
t7 = u1 * t1;
t8 = v2 * v2;
t10 = t7 * t5;
t11 = u1 * u1;
t12 = u2 * t11;
t13 = t12 * t8;
t14 = t8 * v2;
t17 = t5 * v1;
t19 = t17 * u2 * v2;
t20 = t5 * u2;
t21 = t20 * t8;
t23 = v2 * v1;
t26 = t5 * t8 * u1;
t27 = t8 * t8;
t30 = u1 * t14 * v1;
t32 = -v1 * t2 * v2 + t2 * t5 + t7 * t8 - t10 - t13 - t14 * v1 * u2 - t19 + 0.2e1 * t21 + t12 * t23 + t26 + u1 * t27 - 0.2e1 * t30;
t33 = u2 * u1;
t36 = t1 - 0.2e1 * t33 + t11 + t8 - 0.2e1 * t23 + t5;
t37 = t36 * t36;
t38 = 0.1e1 / t37;
t41 = v2 * u1;
t43 = pow(u2 * v1 - t41, 0.2e1);
t44 = 0.1e1 / t36;
t46 = sqrt(t43 * t44);
t47 = 0.1e1 / t46;
t49 = t1 * t1;
t51 = t2 * u1;
t53 = t51 * v1;
t56 = t1 * v2 * t5;
t57 = t1 * t11;
t58 = t57 * v2;
t60 = t57 * v1;
t65 = t11 * u1;
t66 = u2 * t65;
t67 = t66 * v2;
t70 = t11 * t8 * v1;
t71 = v1 * t49 - t51 * v2 - 0.2e1 * t53 - t56 + 0.2e1 * t58 + t60 + t1 * t8 * v1 + t41 * t20 - t33 * t14 - t67 + t11 * t14 - t70;
t75 = t5 * t5;
t85 = -t7 * t23 + t10 - u2 * t75 - t12 * t5 + t13 - t21 + 0.2e1 * t19 + t17 * v2 * u1 - t65 * t8 + t65 * v1 * v2 + t30 - 0.2e1 * t26;
t95 = t11 * t11;
t99 = t53 - t58 - 0.2e1 * t60 - t1 * t17 + t56 + t66 * v1 + t33 * t17 + 0.2e1 * t67 - t33 * t8 * v1 - t95 * v2 + t70 - t11 * v2 * t5;
t103 = (-v2 + v1) * t44;
t105 = (u2 - u1) * t44;
cg6[0][0] = t32 * t38 * t47;
cg6[0][1] = t71 * t38 * t47;
cg6[0][2] = -t85 * t38 * t47;
cg6[0][3] = -t99 * t38 * t47;
cg6[1][0] = -t103;
cg6[1][1] = -t105;
cg6[1][2] = t103;
cg6[1][3] = t105;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><RTable handle="160799508" >TTdSMApJNlJUQUJMRV9TQVZFLzE2MDc5OTUwOFgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiMiIywkKiYlImNHIiIiLCYqJCUiYUciIiNGKiokCiUiYkdGLkYqIyEiIkYuJCEjNUYyLSUnYXJjdGFuRzYkRjBGLUYmCg==</RTable><RTable handle="160281452" >TTdSMApJNlJUQUJMRV9TQVZFLzE2MDI4MTQ1MlgsJSlhbnl0aGluZ0c2IjYiW2dsISIlISEhIyciIyIkLCQqKCUiY0ciIiIsJiokJSJhRyIiI0YqCiokJSJiR0YuRiojISIkRi5GLUYqJCIjNSEiIiwkKihGMEYqRi0hIiMsJkYqRioqJkYwRi5GLUY4RipGNUY1LCQqKEYpRipGK0YxRjBGKkYKMyomRi1GNUY5RjUsJCokRisjRjVGLiQhIzVGNSIiIUYmCg==</RTable><RTable handle="159846816" >TTdSMApJNlJUQUJMRV9TQVZFLzE1OTg0NjgxNlgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiQiJCwmKiYlI3kxRyIiIiUjejJHRipGKiomJSN6CjFHRiolI3kyR0YqISIiLCYqJkYtRiolI3gyR0YqRioqJiUjeDFHRipGK0YqRi8sJiomRjRGKkYuRipGKiomRilGKkYyRipGL0YmCg==</RTable><RTable handle="159351724" >TTdSMApJNlJUQUJMRV9TQVZFLzE1OTM1MTcyNFgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiQiJCQiKy9FIj47JCEiKSQhK2NcPl1QRikkIStDCiRmMiwoISIqRiYK</RTable><RTable handle="160005860" >TTdSMApJNlJUQUJMRV9TQVZFLzE2MDAwNTg2MFgsJSlhbnl0aGluZ0c2IjYiW2dsISIlISEhIzMiJCInIiIhLCQlI3oyRyEiIiUjeTJHRilGJywkCiUjeDJHRiosJEYrRipGLUYnRiclI3oxRywkJSN5MUdGKiwkRi9GKkYnJSN4MUdGMSwkRjNGKkYnRiYK</RTable><RTable handle="161563556" >TTdSMApJNlJUQUJMRV9TQVZFLzE2MTU2MzU1NlgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiQiJC0lJGNvc0c2IyUmdGhldGFHLSUkc2luR0YpCiwkJSRyaG9HISIiRiYK</RTable><RTable handle="159062948" >TTdSMApJNlJUQUJMRV9TQVZFLzE1OTA2Mjk0OFgsJSlhbnl0aGluZ0c2IjYiW2dsISIlISEhIyciJCIjIiIhRichIiIsJC0lJHNpbkc2IyUmdGhlCnRhR0YoLSUkY29zR0YsRidGJgo=</RTable><RTable handle="159618432" >TTdSMApJNlJUQUJMRV9TQVZFLzE1OTYxODQzMlgsJSlhbnl0aGluZ0c2IjYiW2dsISIlISEhIyoiJCIkKiQlJ2FscGhhVkchIiIiIiEqKCUnYWxwCmhhVUdGKUYoRiklI3UwRyIiIkYqKiRGLEYpKihGKEYpRixGKSUjdjBHRi5GKkYqKiZGLEYpRihGKUYmCg==</RTable><RTable handle="159336296" >TTdSMApJNlJUQUJMRV9TQVZFLzE1OTMzNjI5NlgqJSlhbnl0aGluZ0c2IjYiW2dsJyMlISEhIiQiJDAwMDAwMDAwMDAwMDAwMDAzRkVGRDcxMkY5CkFCMUNFN0JGQjk4RUFFQ0I4RjQ3RjhGJgo=</RTable><RTable handle="161874676" >TTdSMApJNlJUQUJMRV9TQVZFLzE2MTg3NDY3NlgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiciJyQhM1ZXX2x1SmJAPSEjQSQiMzd5bFtkeGQlCnAoISM9JCEzS0dBZVQjR24qW0YsJCEzISkpRzYkMysqKlJGRiwkIjM+R0hfUjBRal5GLCQiM3NMa0ZGJSpvOCIpRixGJgo=</RTable><RTable handle="165556220" >TTdSMApJNlJUQUJMRV9TQVZFLzE2NTU1NjIyMFgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiMiIyIiIiwkJSNQaUcjRiciIiNGJgo=</RTable></Worksheet>
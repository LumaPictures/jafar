<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Lucida Bright" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">with(LinearAlgebra):with(CodeGeneration, C):with(VectorCalculus,Jacobian):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#
# Basic T3D with euler representation
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">eulerToR := proc (X::Vector(3))::Matrix(3,3);
MatrixMatrixMultiply(
Matrix([[cos(X[1]), -sin(X[1]), 0.0],[sin(X[1]), cos(X[1]), 0.0],[0.0, 0.0, 1.0]]),
MatrixMatrixMultiply(
Matrix([[cos(X[2]), 0.0, sin(X[2])], [0.0, 1.0, 0.0],[-sin(X[2]), 0.0, cos(X[2])]]),
Matrix([[1.0, 0.0, 0.0],[0.0, cos(X[3]), -sin(X[3])],[0.0, sin(X[3]), cos(X[3])]])));
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSlldWxlclRvUkc2ImYrNiMnSSJYR0YlLUknVmVjdG9yR0YlNiMiIiRGJUYlRiUtX0kuTGluZWFyQWxnZWJyYUc2JEkqcHJvdGVjdGVkR0YySShfc3lzbGliR0YlSTVNYXRyaXhNYXRyaXhNdWx0aXBseUdGJTYkLUknTWF0cml4R0YlNiM3JTclLUkkY29zR0YlNiMmOSQ2IyIiIiwkLUkkc2luR0YlRj0hIiIkIiIhRkc3JUZDRjtGRjclRkZGRiQiIzVGRS1GLzYkLUY3NiM3JTclLUY8NiMmRj82IyIiI0ZGLUZERlM3JUZGRkpGRjclLCRGV0ZFRkZGUi1GNzYjNyU3JUZKRkZGRjclRkYtRjw2IyZGP0YsLCQtRkRGW29GRTclRkZGXm9Gam5GJUYlRiUtRjc2JEYtRi0=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">eulerToM := proc (X::Vector(6))::Matrix(4,4);
Matrix([ [ Matrix( [ eulerToR(X[4..6]), X[1..3]] ) ] , [Matrix([0.0, 0.0, 0.0, 1.0])] ]);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSlldWxlclRvTUc2ImYrNiMnSSJYR0YlLUknVmVjdG9yR0YlNiMiIidGJUYlRiUtSSdNYXRyaXhHRiU2IzckNyMtRi82IzckLUkpZXVsZXJUb1JHRiU2IyY5JDYjOyIiJUYtJkY6NiM7IiIiIiIkNyMtRi82IzcmJCIiIUZIRkdGRyQiIzUhIiJGJUYlRiUtRi82JEY9Rj0=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">invM := proc (M::Matrix(4,4))::Matrix(4,4);
local R, t;
R := Transpose(M[1..3,1..3]);
t := -MatrixMatrixMultiply(R, M[1..3,4..4]);
Matrix([ [ Matrix([ R, t ]) ] , [Matrix([0.0, 0.0, 0.0, 1.0])] ]);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSVpbnZNRzYiZis2IydJIk1HRiUtSSdNYXRyaXhHRiU2JCIiJUYtNiRJIlJHRiVJInRHRiVGJUYlQyU+OCQtX0kuTGluZWFyQWxnZWJyYUc2JEkqcHJvdGVjdGVkR0Y4SShfc3lzbGliR0YlSSpUcmFuc3Bvc2VHRiU2IyY5JDYkOyIiIiIiJEY/PjglLCQtX0Y2STVNYXRyaXhNYXRyaXhNdWx0aXBseUdGJTYkRjMmRj02JEY/O0YtRi0hIiItRis2IzckNyMtRis2IzckRjNGQzcjLUYrNiM3JiQiIiFGWUZYRlgkIiM1RkxGJUYlRiVGKg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#
# Camera Monocular
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">cameraProject := proc (X::Vector(3), alphaU, alphaV, u0, v0)::Vector(2);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">Vector([u0 + alphaU*X[1]/X[3], v0 + alphaV*X[2]/X[3]]);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS5jYW1lcmFQcm9qZWN0RzYiZis2JydJIlhHRiUtSSdWZWN0b3JHRiU2IyIiJEknYWxwaGFVR0YlSSdhbHBoYVZHRiVJI3UwR0YlSSN2MEdGJUYlRiVGJS1GKzYjNyQsJjknIiIiKig5JUY3JjkkNiNGN0Y3JkY7RiwhIiJGNywmOShGNyooOSZGNyZGOzYjIiIjRjdGPUY+RjdGJUYlRiUtRitGRA==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"># 
# camera pano
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">cameraBarretoProject := proc(x::Vector(3), xi, phi, alphaU, alphaV, u0, v0)::Vector(2);
local nx, xbar::Vector(3);
nx := VectorNorm(x,Euclidean);
# hbar</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">xbar[1] := x[1] / nx;
xbar[2] := x[2] / nx;
xbar[3] := x[3] / nx - xi;
# projection
xbar[1] := (xi - phi) * xbar[1];
xbar[2] := (xi - phi) * xbar[2];
cameraProject(&lt;xbar[1], xbar[2], xbar[3]&gt;, alphaU, alphaV, u0, v0);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STVjYW1lcmFCYXJyZXRvUHJvamVjdEc2ImYrNiknSSJ4R0YlLUknVmVjdG9yR0YlNiMiIiRJI3hpR0YlSSRwaGlHRiVJJ2FscGhhVUdGJUknYWxwaGFWR0YlSSN1MEdGJUkjdjBHRiU2JEkjbnhHRiUnSSV4YmFyR0YlRipGJUYlQyk+OCQtX0kuTGluZWFyQWxnZWJyYUc2JEkqcHJvdGVjdGVkR0Y/SShfc3lzbGliR0YlSStWZWN0b3JOb3JtR0YlNiQ5JEkqRXVjbGlkZWFuR0YlPiY4JTYjIiIiKiYmRkNGSEZJRjohIiI+JkZHNiMiIiMqJiZGQ0ZPRklGOkZMPiZGR0YsLCYqJiZGQ0YsRklGOkZMRkk5JUZMPkZGKiYsJkZYRkk5JkZMRklGRkZJPkZOKiZGZW5GSUZORkktSS5jYW1lcmFQcm9qZWN0R0YlNictSSQ8LD5HRiU2JUZGRk5GVDknOSg5KTkqRiVGJUYlLUYrRk8=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#
# OmniImagePointInvDepthFeatureObserveModel::predictObservation
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservation := proc(robot::Vector(6), robotToSensor::Vector(6), feature::Vector(7), xi, phi, alphaU, alphaV, u0, v0)::Vector(2);
local pt3D::Vector(3), pt3DInS::Vector(3), Mr::Matrix(4,4), MrToS::Matrix(4,4), MsToW::Matrix(4,4);
pt3D := feature[1..3] + VectorScalarMultiply(feature[4..6], 1/feature[7]);
Mr := eulerToM(robot);
MrToS := eulerToM(robotToSensor);
MsToW := invM(MatrixMatrixMultiply(Mr, MrToS));
pt3DInS := MatrixVectorMultiply(MsToW, &lt;pt3D[1], pt3D[2], pt3D[3], 1.0&gt;)[1..3];
return cameraBarretoProject(pt3DInS, xi, phi, alphaU, alphaV, u0, v0);
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STNwcmVkaWN0T2JzZXJ2YXRpb25HNiJmKzYrJ0kmcm9ib3RHRiUtSSdWZWN0b3JHNiRJKnByb3RlY3RlZEdGLUkoX3N5c2xpYkdGJTYjIiInJ0kucm9ib3RUb1NlbnNvckdGJUYqJ0koZmVhdHVyZUdGJS1GKzYjIiIoSSN4aUdGJUkkcGhpR0YlSSdhbHBoYVVHRiVJJ2FscGhhVkdGJUkjdTBHRiVJI3YwR0YlNicnSSVwdDNER0YlLUYrNiMiIiQnSShwdDNESW5TR0YlRkEnSSNNckdGJS1JJ01hdHJpeEdGLDYkIiIlRksnSSZNclRvU0dGJUZIJ0kmTXNUb1dHRiVGSEYlRiVDKD44JCwmJjkmNiM7IiIiRkNGWC1fSS5MaW5lYXJBbGdlYnJhR0YsSTVWZWN0b3JTY2FsYXJNdWx0aXBseUdGJTYkJkZVNiM7RktGMCokJkZVRjYhIiJGWD44Ji1JKWV1bGVyVG9NR0YlNiM5JD44Jy1GYW82IzklPjgoLUklaW52TUdGJTYjLV9GZW5JNU1hdHJpeE1hdHJpeE11bHRpcGx5R0YlNiRGX29GZW8+OCUmLV9GZW5JNU1hdHJpeFZlY3Rvck11bHRpcGx5R0YlNiRGam8tSSQ8LD5HRi42JiZGUjYjRlgmRlI2IyIiIyZGUkZCJCIjNUZdb0ZWTy1JNWNhbWVyYUJhcnJldG9Qcm9qZWN0R0YlNilGY3A5JzkoOSk5KjkrOSxGJUYlRiUtRitGX3E=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservation(&lt;x,y,z,yaw,pitch,roll&gt;, &lt;rToS_x, rToS_y, rToS_z, rToS_yaw, rToS_pitch, rToS_roll&gt;, &lt;f_x, f_y, f_z, f_ux, f_uy, f_uz, f_id&gt;, xi, phi, alphaU, alphaV, u0, v0):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">predictObservation_jac := Jacobian(predictObservation(&lt;x, y, z, yaw, pitch, roll&gt;, &lt;rToS_x, rToS_y, rToS_z, rToS_yaw, rToS_pitch, rToS_roll&gt;, &lt;f_x, f_y, f_z, f_ux, f_uy, f_uz, f_id&gt;, xi, phi, alphaU, alphaV, u0, v0),[x, y, z, yaw, pitch, roll, f_x, f_y, f_z, f_ux, f_uy, f_uz, f_id]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STdwcmVkaWN0T2JzZXJ2YXRpb25famFjRzYiLUknUlRBQkxFR0YlNisiKmNMalgiSSlhbnl0aGluZ0dJKnByb3RlY3RlZEdGK0knTWF0cml4RzYkRitJKF9zeXNsaWJHRiVJLHJlY3Rhbmd1bGFyR0YlSS5Gb3J0cmFuX29yZGVyR0YlNyIiIiM7IiIiRjI7RjQiIzg=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(predictObservation_jac, optimize, deducetypes=false);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = xi - phi;
t2 = alphaU * t1;
t3 = cos(yaw);
t4 = cos(pitch);
t5 = t3 * t4;
t6 = cos(rToS_yaw);
t7 = cos(rToS_pitch);
t8 = t6 * t7;
t9 = t5 * t8;
t11 = sin(pitch);
t12 = t3 * t11;
t13 = sin(roll);
t15 = sin(yaw);
t16 = cos(roll);
t19 = t12 * t13 - 0.10e1 * t15 * t16;
t20 = sin(rToS_yaw);
t22 = t19 * t20 * t7;
t27 = t12 * t16 + 0.10e1 * t15 * t13;
t28 = sin(rToS_pitch);
t29 = t27 * t28;
t31 = -0.10000e1 * t9 - 0.1000e1 * t22 + 0.10000e1 * t29;
t35 = 0.100e1 * t9 + 0.10e1 * t22 - 0.100e1 * t29;
t36 = 0.1e1 / f_id;
t38 = f_x + t36 * f_ux;
t40 = t15 * t4;
t41 = t40 * t8;
t42 = 0.100e1 * t41;
t43 = t15 * t11;
t47 = t43 * t13 + 0.10e1 * t3 * t16;
t49 = t47 * t20 * t7;
t54 = t43 * t16 - 0.10e1 * t3 * t13;
t55 = t54 * t28;
t57 = t42 + 0.10e1 * t49 - 0.100e1 * t55;
t59 = f_y + t36 * f_uy;
t62 = t11 * t6 * t7;
t64 = t4 * t13;
t65 = t20 * t7;
t66 = t64 * t65;
t68 = t4 * t16;
t69 = t68 * t28;
t71 = -0.1000e1 * t62 + 0.100e1 * t66 - 0.1000e1 * t69;
t73 = f_z + t36 * f_uz;
t76 = 0.10e1 * t5 * rToS_x;
t77 = t19 * rToS_y;
t78 = t27 * rToS_z;
t80 = t76 + t77 + t78 + 0.10e1 * x;
t84 = 0.10e1 * t40 * rToS_x;
t88 = t84 + t47 * rToS_y + t54 * rToS_z + 0.10e1 * y;
t98 = -0.100e1 * t11 * rToS_x + 0.10e1 * t64 * rToS_y + 0.10e1 * t68 * rToS_z + 0.10e1 * z;
t101 = -t35 * t38 - t57 * t59 - t71 * t73 + 0.10e1 * t35 * t80 + 0.10e1 * t57 * t88 + 0.10e1 * t71 * t98;
t102 = fabs(t101);
t103 = t102 * t102;
t104 = t6 * t28;
t105 = sin(rToS_roll);
t107 = cos(rToS_roll);
t110 = t104 * t105 - 0.10e1 * t20 * t107;
t111 = t5 * t110;
t113 = t20 * t28;
t117 = t113 * t105 + 0.10e1 * t6 * t107;
t118 = t19 * t117;
t119 = t27 * t7;
t120 = t119 * t105;
t122 = 0.10e1 * t111 + t118 + 0.10e1 * t120;
t124 = t40 * t110;
t125 = 0.10e1 * t124;
t126 = t47 * t117;
t127 = t54 * t7;
t128 = t127 * t105;
t130 = t125 + t126 + 0.10e1 * t128;
t132 = t11 * t110;
t134 = t64 * t117;
t136 = t7 * t105;
t137 = t68 * t136;
t139 = -0.100e1 * t132 + 0.10e1 * t134 + 0.100e1 * t137;
t147 = -t122 * t38 - t130 * t59 - t139 * t73 + 0.10e1 * t122 * t80 + 0.10e1 * t130 * t88 + 0.10e1 * t139 * t98;
t148 = fabs(t147);
t149 = t148 * t148;
t153 = t104 * t107 + 0.10e1 * t20 * t105;
t154 = t5 * t153;
t159 = t113 * t107 - 0.10e1 * t6 * t105;
t160 = t19 * t159;
t161 = t119 * t107;
t163 = 0.10e1 * t154 + t160 + 0.10e1 * t161;
t165 = t40 * t153;
t166 = 0.10e1 * t165;
t167 = t47 * t159;
t168 = t127 * t107;
t170 = t166 + t167 + 0.10e1 * t168;
t172 = t11 * t153;
t174 = t64 * t159;
t176 = t7 * t107;
t177 = t68 * t176;
t179 = -0.100e1 * t172 + 0.10e1 * t174 + 0.100e1 * t177;
t187 = -t163 * t38 - t170 * t59 - t179 * t73 + 0.10e1 * t163 * t80 + 0.10e1 * t170 * t88 + 0.10e1 * t179 * t98;
t188 = fabs(t187);
t189 = t188 * t188;
t190 = t103 + t149 + t189;
t191 = sqrt(t190);
t192 = 0.1e1 / t191;
t195 = -t187 * t192 - xi;
t196 = 0.1e1 / t195;
t199 = -t2 * t101;
t201 = 0.1e1 / t191 / t190;
t202 = t201 * t196;
t203 = fabs(t101) / t101;
t204 = t102 * t203;
t206 = fabs(t147) / t147;
t207 = t148 * t206;
t211 = 0.1000e1 * t111 + 0.100e1 * t118 + 0.1000e1 * t120;
t213 = fabs(t187) / t187;
t214 = t188 * t213;
t218 = 0.1000e1 * t154 + 0.100e1 * t160 + 0.1000e1 * t161;
t220 = -t204 * t31 + t207 * t211 + t214 * t218;
t221 = 0.2e1 * t202 * t220;
t224 = t195 * t195;
t226 = t192 / t224;
t228 = -t187 * t201;
t232 = t226 * (-t218 * t192 - t228 * t220);
t238 = -0.10000e1 * t41 - 0.1000e1 * t49 + 0.10000e1 * t55;
t246 = 0.1000e1 * t124 + 0.100e1 * t126 + 0.1000e1 * t128;
t251 = 0.1000e1 * t165 + 0.100e1 * t167 + 0.1000e1 * t168;
t253 = -t204 * t238 + t207 * t246 + t214 * t251;
t254 = 0.2e1 * t202 * t253;
t261 = t226 * (-t251 * t192 - t228 * t253);
t267 = 0.100000e1 * t62 - 0.10000e1 * t66 + 0.100000e1 * t69;
t275 = -0.10000e1 * t132 + 0.1000e1 * t134 + 0.10000e1 * t137;
t280 = -0.10000e1 * t172 + 0.1000e1 * t174 + 0.10000e1 * t177;
t282 = -t204 * t267 + t207 * t275 + t214 * t280;
t283 = 0.2e1 * t202 * t282;
t290 = t226 * (-t280 * t192 - t228 * t282);
t298 = -t42 - 0.10e1 * t47 * t20 * t7 + 0.100e1 * t54 * t28;
t305 = -t84 - t47 * rToS_y - t54 * rToS_z;
t310 = t76 + t77 + t78;
t313 = t298 * t38 + t35 * t59 - 0.10e1 * t298 * t80 - 0.10e1 * t35 * t305 - 0.10e1 * t35 * t88 - 0.10e1 * t57 * t310;
t319 = -t54 * t7;
t322 = -t125 - t47 * t117 + 0.10e1 * t319 * t105;
t333 = -t322 * t38 - t122 * t59 + 0.10e1 * t322 * t80 + 0.10e1 * t122 * t305 + 0.10e1 * t122 * t88 + 0.10e1 * t130 * t310;
t338 = -t166 - t47 * t159 + 0.10e1 * t319 * t107;
t349 = -t338 * t38 - t163 * t59 + 0.10e1 * t338 * t80 + 0.10e1 * t163 * t305 + 0.10e1 * t163 * t88 + 0.10e1 * t170 * t310;
t351 = -t204 * t313 + t207 * t333 + t214 * t349;
t352 = 0.2e1 * t202 * t351;
t359 = t226 * (-t349 * t192 - t228 * t351);
t365 = t13 * t20 * t7;
t368 = t16 * t28;
t371 = -0.100e1 * t12 * t8 + 0.10e1 * t5 * t365 - 0.100e1 * t5 * t368;
t379 = -0.100e1 * t43 * t8 + 0.10e1 * t40 * t365 - 0.100e1 * t40 * t368;
t384 = t11 * t13;
t387 = t11 * t16;
t390 = -0.1000e1 * t4 * t6 * t7 - 0.100e1 * t384 * t65 + 0.1000e1 * t387 * t28;
t396 = t13 * rToS_y;
t398 = t16 * rToS_z;
t400 = -0.10e1 * t12 * rToS_x + t5 * t396 + t5 * t398;
t409 = -0.10e1 * t43 * rToS_x + t40 * t396 + t40 * t398;
t420 = -0.100e1 * t4 * rToS_x - 0.10e1 * t384 * rToS_y - 0.10e1 * t387 * rToS_z;
t423 = t371 * t38 + t379 * t59 + t390 * t73 - 0.10e1 * t371 * t80 - 0.10e1 * t35 * t400 - 0.10e1 * t379 * t88 - 0.10e1 * t57 * t409 - 0.10e1 * t390 * t98 - 0.10e1 * t71 * t420;
t430 = t13 * t117;
t432 = t16 * t7;
t433 = t432 * t105;
t436 = -0.10e1 * t12 * t110 + t5 * t430 + 0.10e1 * t5 * t433;
t443 = -0.10e1 * t43 * t110 + t40 * t430 + 0.10e1 * t40 * t433;
t451 = -0.100e1 * t4 * t110 - 0.10e1 * t384 * t117 - 0.100e1 * t387 * t136;
t465 = -t436 * t38 - t443 * t59 - t451 * t73 + 0.10e1 * t436 * t80 + 0.10e1 * t122 * t400 + 0.10e1 * t443 * t88 + 0.10e1 * t130 * t409 + 0.10e1 * t451 * t98 + 0.10e1 * t139 * t420;
t469 = t13 * t159;
t471 = t432 * t107;
t474 = -0.10e1 * t12 * t153 + t5 * t469 + 0.10e1 * t5 * t471;
t481 = -0.10e1 * t43 * t153 + t40 * t469 + 0.10e1 * t40 * t471;
t489 = -0.100e1 * t4 * t153 - 0.10e1 * t384 * t159 - 0.100e1 * t387 * t176;
t503 = -t474 * t38 - t481 * t59 - t489 * t73 + 0.10e1 * t474 * t80 + 0.10e1 * t163 * t400 + 0.10e1 * t481 * t88 + 0.10e1 * t170 * t409 + 0.10e1 * t489 * t98 + 0.10e1 * t179 * t420;
t505 = -t204 * t423 + t207 * t465 + t214 * t503;
t506 = 0.2e1 * t202 * t505;
t513 = t226 * (-t503 * t192 - t228 * t505);
t521 = 0.10e1 * t27 * t20 * t7 + 0.100e1 * t19 * t28;
t528 = 0.10e1 * t54 * t20 * t7 + 0.100e1 * t47 * t28;
t534 = 0.100e1 * t68 * t65 + 0.1000e1 * t64 * t28;
t540 = t27 * rToS_y - t19 * rToS_z;
t547 = t54 * rToS_y - t47 * rToS_z;
t556 = 0.10e1 * t68 * rToS_y - 0.10e1 * t64 * rToS_z;
t559 = t521 * t38 + t528 * t59 + t534 * t73 - 0.10e1 * t521 * t80 - 0.10e1 * t35 * t540 - 0.10e1 * t528 * t88 - 0.10e1 * t57 * t547 - 0.10e1 * t534 * t98 - 0.10e1 * t71 * t556;
t565 = -t19 * t7;
t568 = t27 * t117 + 0.10e1 * t565 * t105;
t571 = -t47 * t7;
t574 = t54 * t117 + 0.10e1 * t571 * t105;
t580 = 0.10e1 * t68 * t117 - 0.100e1 * t64 * t136;
t594 = -t568 * t38 - t574 * t59 - t580 * t73 + 0.10e1 * t568 * t80 + 0.10e1 * t122 * t540 + 0.10e1 * t574 * t88 + 0.10e1 * t130 * t547 + 0.10e1 * t580 * t98 + 0.10e1 * t139 * t556;
t599 = t27 * t159 + 0.10e1 * t565 * t107;
t604 = t54 * t159 + 0.10e1 * t571 * t107;
t610 = 0.10e1 * t68 * t159 - 0.100e1 * t64 * t176;
t624 = -t599 * t38 - t604 * t59 - t610 * t73 + 0.10e1 * t599 * t80 + 0.10e1 * t163 * t540 + 0.10e1 * t604 * t88 + 0.10e1 * t170 * t547 + 0.10e1 * t610 * t98 + 0.10e1 * t179 * t556;
t626 = -t204 * t559 + t207 * t594 + t214 * t624;
t627 = 0.2e1 * t202 * t626;
t634 = t226 * (-t624 * t192 - t228 * t626);
t643 = -t204 * t35 - t207 * t122 - t214 * t163;
t644 = 0.2e1 * t202 * t643;
t651 = t226 * (t163 * t192 - t228 * t643);
t660 = -t204 * t57 - t207 * t130 - t214 * t170;
t661 = 0.2e1 * t202 * t660;
t668 = t226 * (t170 * t192 - t228 * t660);
t677 = -t204 * t71 - t207 * t139 - t214 * t179;
t678 = 0.2e1 * t202 * t677;
t685 = t226 * (t179 * t192 - t228 * t677);
t690 = t36 * t192 * t196;
t696 = t163 * t36;
t698 = -t204 * t35 * t36 - t207 * t122 * t36 - t214 * t696;
t699 = 0.2e1 * t202 * t698;
t706 = t226 * (t696 * t192 - t228 * t698);
t715 = t170 * t36;
t717 = -t204 * t57 * t36 - t207 * t130 * t36 - t214 * t715;
t718 = 0.2e1 * t202 * t717;
t725 = t226 * (t715 * t192 - t228 * t717);
t734 = t179 * t36;
t736 = -t204 * t71 * t36 - t207 * t139 * t36 - t214 * t734;
t737 = 0.2e1 * t202 * t736;
t744 = t226 * (t734 * t192 - t228 * t736);
t747 = f_id * f_id;
t748 = 0.1e1 / t747;
t755 = -t35 * t748 * f_ux - t57 * t748 * f_uy - t71 * t748 * f_uz;
t766 = t122 * t748 * f_ux + t130 * t748 * f_uy + t139 * t748 * f_uz;
t774 = t163 * t748 * f_ux + t170 * t748 * f_uy + t179 * t748 * f_uz;
t776 = -t204 * t755 + t207 * t766 + t214 * t774;
t777 = 0.2e1 * t202 * t776;
t784 = t226 * (-t774 * t192 - t228 * t776);
t787 = alphaV * t1;
t791 = -t787 * t147;
cg[0][0] = t2 * t31 * t192 * t196 - t199 * t221 / 0.2e1 - t199 * t232;
cg[0][1] = t2 * t238 * t192 * t196 - t199 * t254 / 0.2e1 - t199 * t261;
cg[0][2] = t2 * t267 * t192 * t196 - t199 * t283 / 0.2e1 - t199 * t290;
cg[0][3] = t2 * t313 * t192 * t196 - t199 * t352 / 0.2e1 - t199 * t359;
cg[0][4] = t2 * t423 * t192 * t196 - t199 * t506 / 0.2e1 - t199 * t513;
cg[0][5] = t2 * t559 * t192 * t196 - t199 * t627 / 0.2e1 - t199 * t634;
cg[0][6] = t2 * t35 * t192 * t196 - t199 * t644 / 0.2e1 - t199 * t651;
cg[0][7] = t2 * t57 * t192 * t196 - t199 * t661 / 0.2e1 - t199 * t668;
cg[0][8] = t2 * t71 * t192 * t196 - t199 * t678 / 0.2e1 - t199 * t685;
cg[0][9] = t2 * t35 * t690 - t199 * t699 / 0.2e1 - t199 * t706;
cg[0][10] = t2 * t57 * t690 - t199 * t718 / 0.2e1 - t199 * t725;
cg[0][11] = t2 * t71 * t690 - t199 * t737 / 0.2e1 - t199 * t744;
cg[0][12] = t2 * t755 * t192 * t196 - t199 * t777 / 0.2e1 - t199 * t784;
cg[1][0] = -t787 * t211 * t192 * t196 - t791 * t221 / 0.2e1 - t791 * t232;
cg[1][1] = -t787 * t246 * t192 * t196 - t791 * t254 / 0.2e1 - t791 * t261;
cg[1][2] = -t787 * t275 * t192 * t196 - t791 * t283 / 0.2e1 - t791 * t290;
cg[1][3] = -t787 * t333 * t192 * t196 - t791 * t352 / 0.2e1 - t791 * t359;
cg[1][4] = -t787 * t465 * t192 * t196 - t791 * t506 / 0.2e1 - t791 * t513;
cg[1][5] = -t787 * t594 * t192 * t196 - t791 * t627 / 0.2e1 - t791 * t634;
cg[1][6] = t787 * t122 * t192 * t196 - t791 * t644 / 0.2e1 - t791 * t651;
cg[1][7] = t787 * t130 * t192 * t196 - t791 * t661 / 0.2e1 - t791 * t668;
cg[1][8] = t787 * t139 * t192 * t196 - t791 * t678 / 0.2e1 - t791 * t685;
cg[1][9] = t787 * t122 * t690 - t791 * t699 / 0.2e1 - t791 * t706;
cg[1][10] = t787 * t130 * t690 - t791 * t718 / 0.2e1 - t791 * t725;
cg[1][11] = t787 * t139 * t690 - t791 * t737 / 0.2e1 - t791 * t744;
cg[1][12] = -t787 * t766 * t192 * t196 - t791 * t777 / 0.2e1 - t791 * t784;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#
# BearingPointInvDepthFeatureObserveModel::inverseObservation
#</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">inverseObservation := proc(z::Vector(2))::Vector(3);</Text-field></Input><Input><Text-field prompt="&gt; " style="Maple Input">Vector([cos(-z[2])*cos(z[1]), cos(-z[2])*sin(z[1]), sin(-z[2])])
end proc;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STNpbnZlcnNlT2JzZXJ2YXRpb25HNiJmKzYjJ0kiekdGJS1JJ1ZlY3Rvckc2JEkqcHJvdGVjdGVkR0YtSShfc3lzbGliR0YlNiMiIiNGJUYlRiUtRis2IzclKiYtSSRjb3NHRiw2IywkJjkkRi8hIiIiIiItRjY2IyZGOjYjRjxGPComRjVGPC1JJHNpbkdGLEY+RjwtRkNGN0YlRiVGJS1GKzYjIiIk</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">inverseObservation(&lt;theta, phi&gt;);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMtSSdSVEFCTEVHNiI2JSIqLzJjWSItSSdNQVRSSVhHRiU2IzclNyMqJi1JJGNvc0c2JEkqcHJvdGVjdGVkR0YxSShfc3lzbGliR0YlNiNJJHBoaUdGJSIiIi1GLzYjSSZ0aGV0YUdGJUY1NyMqJkYuRjUtSSRzaW5HRjBGN0Y1NyMsJC1GPEYzISIiJkknVmVjdG9yR0YwNiNJJ2NvbHVtbkdGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">inverseObservationJac:=Jacobian(inverseObservation(&lt;theta, phi&gt;),[theta, phi]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STZpbnZlcnNlT2JzZXJ2YXRpb25KYWNHNiItSSdSVEFCTEVHRiU2JSIqWyUpM1oiLUknTUFUUklYR0YlNiM3JTckLCQqJi1JJGNvc0c2JEkqcHJvdGVjdGVkR0Y0SShfc3lzbGliR0YlNiNJJHBoaUdGJSIiIi1JJHNpbkdGMzYjSSZ0aGV0YUdGJUY4ISIiLCQqJi1GOkY2RjgtRjJGO0Y4Rj03JComRjFGOEZBRjgsJComRkBGOEY5RjhGPTckIiIhLCRGMUY9SSdNYXRyaXhHRjM=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">C(inverseObservationJac, optimize, deducetypes=false);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">t1 = cos(phi);
t2 = sin(theta);
t4 = sin(phi);
t5 = cos(theta);
cg[0][0] = -t1 * t2;
cg[0][1] = -t4 * t5;
cg[1][0] = t1 * t5;
cg[1][1] = -t4 * t2;
cg[2][0] = 0.0e0;
cg[2][1] = -t1;</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/><Text-field/><Text-field/><RTable handle="145633356" ></RTable><RTable handle="146560704" >TTdSMApJNlJUQUJMRV9TQVZFLzE0NjU2MDcwNFgqJSlhbnl0aGluZ0c2IjYiW2dsISMlISEhIiQiJComLSUkY29zRzYjJSRwaGlHIiIiLUYpNiMlCiZ0aGV0YUdGLComRihGLC0lJHNpbkdGLkYsLCQtRjJGKiEiIkYmCg==</RTable><RTable handle="147088448" >TTdSMApJNlJUQUJMRV9TQVZFLzE0NzA4ODQ0OFgsJSlhbnl0aGluZ0c2IjYiW2dsISIlISEhIyciJCIjLCQqJi0lJGNvc0c2IyUkcGhpRyIiIi0lCiRzaW5HNiMlJnRoZXRhR0YtISIiKiZGKUYtLUYqRjBGLSIiISwkKiYtRi9GK0YtRjRGLUYyLCQqJkY4Ri1GLkYtRjIsJEYpRjJGJgo=</RTable></Worksheet>